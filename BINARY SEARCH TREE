#include<bits/stdc++.h>
using namespace std;
struct node
{
    int data;
    struct node *left,*right;
};
struct node *newnode(int key)
{
    struct node *temp=(struct node *)malloc(sizeof(struct node));
    temp->data=key;
    temp->left=temp->right=NULL;
    return temp;
}
void inorder(struct node *root)
{
    if(root!=NULL)
    {
        inorder(root->left);
        cout<<root->data<<" ";
        inorder(root->right);
    }
}
struct node* insert(struct node* node,int data)
{
    if(node==NULL)
    {
        return newnode(data);
    }
    if(data<node->data)
    {
        node->left=insert(node->left,data);
    }
    else if(data>node->data)
    {
        node->right=insert(node->right,data);
    }
    return node;
}
struct node* minvalue(struct node *node)
{
    struct node* current=node;
    while(current&&current->left !=NULL)
    {
        current=current->left;
    }
    return current;
}
struct node* deletenode(struct node *node,int x)
{
    if(node==NULL)
    {
        return node;
    }
    if(x<node->data)
    {
        node->left=deletenode(node->left,x);
    }
    else if(x>node->data)
    {
        node->right=deletenode(node->right,x);
        
    }
    else
    {
        if(node->left==NULL)
        {
            struct node *temp=node->right;
            free(node);
            return temp;
        }
        else if(node->right==NULL)
        {
            struct node *temp=node->left;
            free(node);
            return temp;
        }
        else
        {
            struct node *temp=minvalue(node->right);
            node->data=temp->data;
            node->right=deletenode(node->right,temp->data);
        }
    }
    return node;
}
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
     struct node *root=NULL;

     int n;
     cin>>n;
     for(int i=0;i<n;i++)
     {
        int k;
        cin>>k;
        root=insert(root, k);
     }
     //inorder(root);
     //cout<<endl;
     int r;
     cin>>r;
     root=deletenode(root,r);
     inorder(root);
    }
   return 0;
}
