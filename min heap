#include<bits/stdc++.h>
using namespace std;
void swap(int *x,int *y);
class minheap
{
    
    int *harr;
    int capacity;
    int heap_size;
public:
   minheap(int a[], int size);
    void minheapify(int i);
    int parent(int i)
    {
        return((i-1)/2);
    }
    int left(int i)
    {
        return((2*i)+1);
    }
    int right(int i)
    {
        return((2*i)+2);
    }
    int extractmin();
    int getmin()
    {
       return(harr[0]); 
    }
    void decresevalue(int i,int new_value);
    void deletee(int i);
    void insert(int k);
    //void decresevalue(int i,int new_value);
    void replacemin(int x)
    {
        harr[0] = x; 
        minheapify(0); 
        
    } 
};
minheap::minheap(int a[], int size) 
{ 
    heap_size = size; 
    harr = a;  // store address of array 
    int i = (heap_size - 1)/2; 
    while (i >= 0) 
    { 
        minheapify(i); 
        i--; 
    } 
} 

void minheap::insert(int k)
{
    if(heap_size==capacity)
    {
        cout<<"element cannot be inserted in heap"<<endl;
        return;
    }
    heap_size++;
    int i=heap_size-1;
    harr[i]=k;
    while(i!=0 && harr[parent(i)]>harr[i])
    {
        swap(&harr[i],&harr[parent(i)]);
        i=parent(i);
    }
}

void minheap::decresevalue(int i,int new_value)
{
  harr[i]=new_value;
  while(i!=0 && harr[parent(i)]>harr[i])
  {
      swap(&harr[i],&harr[parent(i)]);
      i=parent(i);
  }
}


int minheap::extractmin()
{
    if(heap_size<0)
    {
        return INT_MAX;
    }
    if(heap_size==1)
    {
        heap_size--;
        return harr[0];
    }
    int root=harr[0];
    harr[0] = harr[heap_size-1]; 
    heap_size--; 
    minheapify(0); 
  
    return root;
}

void minheap::deletee(int i)
{
    decresevalue(i, INT_MIN); 
    extractmin();
}

void minheap::minheapify(int i) 
{ 
    int l = left(i); 
    int r = right(i); 
    int smallest = i; 
    if (l < heap_size && harr[l] < harr[i]) 
        smallest = l; 
    if (r < heap_size && harr[r] < harr[smallest]) 
        smallest = r; 
    if (smallest != i) 
    { 
        swap(&harr[i], &harr[smallest]); 
        minheapify(smallest); 
    } 
}

void swap(int *x, int *y) 
{ 
    int temp = *x; 
    *x = *y; 
    *y = temp; 
} 
